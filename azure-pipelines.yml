# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '11625c65-6612-4c48-a090-17d87216f47d'
  imageRepository: 'jageshmaharjanpipelinesjavascriptdocker'
  containerRegistry: 'delvifycontainerregistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'delvifycontainerregistry2262071b-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Pay-As-You-Go(732b4875-f4bc-4972-8623-f53ad66418ed)'
        azureContainerRegistry: '{"loginServer":"delvifycontainerregistry.azurecr.io", "id" : "/subscriptions/732b4875-f4bc-4972-8623-f53ad66418ed/resourceGroups/myapp-rg/providers/Microsoft.ContainerRegistry/registries/delvifycontainerregistry"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'

    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Pay-As-You-Go(732b4875-f4bc-4972-8623-f53ad66418ed)'
        azureContainerRegistry: '{"loginServer":"delvifycontainerregistry.azurecr.io", "id" : "/subscriptions/732b4875-f4bc-4972-8623-f53ad66418ed/resourceGroups/myapp-rg/providers/Microsoft.ContainerRegistry/registries/delvifycontainerregistry"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
              
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'jageshmaharjanpipelinesjavascriptdocker-1719.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
